
include(CheckIncludeFiles)
include(CheckTypeSize)

# Check for the int-type includes
check_include_files (stdint.h HAVE_STDINT_H)

check_type_size ("long" LONG_INT)
check_type_size ("int" INT)

# Check our 64 bit integer sizes
check_type_size (__int64 __INT64)
check_type_size (int64_t INT64_T)
check_type_size ("long long" LONG_LONG_INT)
if (HAVE_INT64_T)
   set (FREESERF_INT64 "int64_t")
elseif (HAVE___INT64)
   set (FREESERF_INT64 "__int64")
elseif (HAVE_LONG_INT AND (${LONG_INT} EQUAL 8))
   set (FREESERF_INT64 "long")
elseif (HAVE_LONG_LONG_INT AND (${LONG_LONG_INT} EQUAL 8))
   set (FREESERF_INT64 "long long int")
else ()
   message (FATAL_ERROR "Could not detect a valid 64-bit integer type")
endif ()

# Check our 64 bit integer sizes
check_type_size (__uint64 __UINT64)
check_type_size (uint64_t UINT64_T)
check_type_size ("unsigned long" ULONG_INT)
check_type_size ("unsigned long long" ULONG_LONG_INT)
if (HAVE_UINT64_T)
   set (FREESERF_UINT64 "uint64_t")
elseif (HAVE___UINT64)
   set (FREESERF_UINT64 "__uint64")
elseif (HAVE_ULONG_INT AND (${ULONG_INT} EQUAL 8))
   set (FREESERF_UINT64 "unsigned long int")
elseif (HAVE_ULONG_LONG_INT AND (${ULONG_LONG_INT} EQUAL 8))
   set (FREESERF_UINT64 "unsigned long long int")
else ()
   message (FATAL_ERROR "Could not detect a valid unsigned 64-bit integer type")
endif ()



# Check our 32 bit integer sizes
check_type_size (int32_t INT32_T)
check_type_size (__int32 __INT32)
if (HAVE_INT32_T)
   set (FREESERF_INT32 int32_t)
elseif (HAVE___INT32)
   set (FREESERF_INT32 __int32)
elseif (HAVE_LONG_INT AND (${LONG_INT} EQUAL 4))
   set (FREESERF_INT32 long)
elseif (HAVE_INT AND (${INT} EQUAL 4))
   set (FREESERF_INT32 int)
else ()
   message (FATAL_ERROR "Could not detect a valid 32-bit integer type")
endif ()

check_type_size ("long" LONG_INT)
check_type_size ("int" INT)
check_type_size ("char" CHAR)
check_type_size ("short" SHORT)
check_type_size ("unsigned long" UNSIGNED_LONG_INT)
check_type_size ("unsigned int" UNSIGNED_INT)
check_type_size ("unsigned short" UNSIGNED_SHORT)

check_type_size (uint32_t UINT32_T)
check_type_size (__uint32 __UINT32)
if (HAVE_UINT32_T)
   set (FREESERF_UINT32 uint32_t)
elseif (HAVE___UINT32)
   set (FREESERF_UINT32 __uint32)
elseif (HAVE_UNSIGNED_LONG_INT AND (${UNSIGNED_LONG_INT} EQUAL 4))
   set (FREESERF_UINT32 "unsigned long")
elseif (HAVE_UNSIGNED_INT AND (${UNSIGNED_INT} EQUAL 4))
   set (FREESERF_UINT32 "unsigned int")
else ()
   message (FATAL_ERROR "Could not detect a valid unsigned 32-bit integer type")
endif ()

check_type_size (uint16_t UINT16_T)
check_type_size (__uint16 __UINT16)
if (HAVE_UINT16_T)
   set (FREESERF_UINT16 uint16_t)
elseif (HAVE___UINT16)
   set (FREESERF_UINT16 __uint16)
elseif (HAVE_UNSIGNED_INT AND (${UNSIGNED_INT} EQUAL 2))
   set (FREESERF_UINT16 "unsigned int")
elseif (HAVE_UNSIGNED_SHORT AND (${UNSIGNED_SHORT} EQUAL 2))
   set (FREESERF_UINT16 "unsigned short")
else ()
   message (FATAL_ERROR "Could not detect a valid unsigned 16-bit integer type")
endif ()

check_type_size (int16_t INT16_T)
check_type_size (__int16 __INT16)
if (HAVE_INT16_T)
   set (FREESERF_INT16 int16_t)
elseif (HAVE___INT16)
   set (FREESERF_INT16 __int16)
elseif (HAVE_INT AND (${INT} EQUAL 2))
   set (FREESERF_INT16 "int")
elseif (HAVE_SHORT AND (${SHORT} EQUAL 2))
   set (FREESERF_INT16 "short")
else ()
   message (FATAL_ERROR "Could not detect a valid signed 16-bit integer type")
endif ()

check_type_size (uint8_t UINT8_T)
check_type_size (__uint8 __UINT8)
if (HAVE_UINT8_T)
   set (FREESERF_UINT8 uint8_t)
elseif (HAVE___UINT8)
   set (FREESERF_UINT8 __uint8)
else ()
   set (FREESERF_UINT8 "unsigned char")
endif ()

check_type_size (int8_t INT8_T)
check_type_size (__int8 __INT8)
if (HAVE_INT8_T)
   set (FREESERF_INT8 int8_t)
elseif (HAVE___INT8)
   set (FREESERF_INT8 __int8)
else ()
   set (FREESERF_INT8 "char")
endif ()

# Check for ssize_t and SSIZE_T existance.
check_type_size(ssize_t SSIZE_T)
check_type_size(SSIZE_T UPPERCASE_SSIZE_T)
if(NOT HAVE_SSIZE_T)
   if(HAVE_UPPERCASE_SSIZE_T)
      set(FREESERF_SSIZE SSIZE_T)
   else()
      set(FREESERF_SSIZE int)
   endif()
endif()

